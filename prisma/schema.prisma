// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Profile {
  id          Int    @id @default(autoincrement())
  pid         String @unique @default(uuid())
  profileName String
  jobTitle    String
  name        String
  location    String
  phone       String
  email       String
  websiteText String
  websiteLink String
  summary     String
  coverLetter String
}

enum JobType {
  fullTime
  partTime
  contract
}

enum JobArrangement {
  onSite
  hybrid
  remote
}

enum JobStatus {
  notApplied
  applied
  appliedWithdrawn
  appliedRejected
  interviewing
  interviewedWithdrawn
  interviewedRejected
  offerReceived
  offerAccepted
}

model Job {
  id                   Int                   @id @default(autoincrement())
  pid                  String                @unique @default(uuid())
  title                String
  company              String
  location             String
  type                 JobType?
  arrangement          JobArrangement?
  staffingCompany      String
  description          String
  postedDate           String?
  appliedDate          String?
  status               JobStatus
  notes                String
  postedSalary         String
  desiredSalary        String
  links                Link[]
  contacts             Contact[]
  applicationQuestions ApplicationQuestion[]
  resumes              Resume[]
}

model Link {
  id        Int    @id @default(autoincrement())
  pid       String @unique @default(uuid())
  name      String
  url       String
  sortOrder Int
  jobId     Int
  Job       Job    @relation(fields: [jobId], references: [id])
}

model Contact {
  id           Int    @id @default(autoincrement())
  pid          String @unique @default(uuid())
  name         String
  title        String
  phone        String
  email        String
  company      String
  addressLine1 String
  addressLine2 String
  addressLine3 String
  addressLine4 String
  sortOrder    Int
  jobId        Int
  Job          Job    @relation(fields: [jobId], references: [id])
}

model ApplicationQuestion {
  id       Int    @id @default(autoincrement())
  pid      String @unique @default(uuid())
  question String
  answer   String
  jobId    Int
  Job      Job    @relation(fields: [jobId], references: [id])
}

enum ResumeTemplate {
  template01
  template02
}

model Resume {
  id              Int            @id @default(autoincrement())
  pid             String         @unique @default(uuid())
  resumeName      String
  name            String
  location        String
  phone           String
  email           String
  websiteText     String
  websiteLink     String
  summary         String
  coverLetter     String
  allowPageBreaks Boolean
  template        ResumeTemplate
  jobId           Int
  Job             Job            @relation(fields: [jobId], references: [id])
}
